name: Deploy image to AWS ECR


on:
  push:
    branches:
      - master
jobs:
  ecr:
    name: build and deploy image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo EMAIL_HOST_USER=${{secrets.EMAIL_HOST_USER}} >> .env
          echo EMAIL_HOST_PASSWORD=${{secrets.EMAIL_HOST_PASSWORD}} >> .env
          echo EMAIL_USE_TLS=${{secrets.EMAIL_USE_TLS}} >> .env
          echo EMAIL_PORT=${{secrets.EMAIL_PORT}} >> .env
          echo EMAIL_HOST=${{secrets.EMAIL_HOST}} >> .env
          echo DEFAULT_FROM_EMAIL=${{secrets.DEFAULT_FROM_EMAIL}} >> .env
          echo AWS_ACCESS_KEY_ID_S3=${{secrets.AWS_ACCESS_KEY_ID_S3}} >> .env
          echo AWS_SECRET_ACCESS_KEY_S3=${{secrets.AWS_SECRET_ACCESS_KEY_S3}} >> .env
          echo AWS_STORAGE_BUCKET_NAME=${{secrets.AWS_STORAGE_BUCKET_NAME}} >> .env
          echo CELERY_BROKER_URL=${{secrets.CELERY_BROKER_URL}} >> .env
      - name: Set Tag Number
        id: tag-number
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check Tag Release
        env:
          RELEASE_VERSION: ${{ steps.tag-number.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
        
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: djangorestframework-auth-api
          IMAGE_TAG: latest
        run: |
          docker build -t djangorestframework_bookapi_celery .
          docker tag djangorestframework_bookapi_celery:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
